/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class TestAppointment extends javax.swing.JFrame {
    int row;
    String id;
    String filename;
    String patient;
    String test;
    String test_id;
    String patient_doctor_id;
    String full;
    byte[] person_doc;
    /**
     * Creates new form TestAppointment
     */
    public TestAppointment() {
        initComponents();
    }
    
    public TestAppointment(String ID){
        initComponents();
        Toolkit tk=Toolkit.getDefaultToolkit();
        int xsize=(int)tk.getScreenSize().getWidth();
        int ysize=(int)tk.getScreenSize().getHeight();
        this.setSize(xsize,ysize);
        
        jTestTable.getTableHeader().setFont(new Font("Raleway SemiBold", Font.PLAIN, 13));
        jTestTable.getTableHeader().setForeground(Color.BLUE);
        
        id=ID;
        
        jAdd.setVisible(false);
        jFile.setVisible(false);
        jView.setVisible(false);
        jSubmit.setVisible(false);
          
        Connection con = null;
        PreparedStatement st=null;
        ResultSet rs = null;
        con = Link.getConnection();
        String sql="select * from patient_test t, patient_doctor pd, patient p, doctor d where t.appointed_date=? and t.done=? and t.report=? and t.patient_doctor_id=pd.id and pd.patient_id=p.id and pd.doctor_id=d.id";
        try{
        st=con.prepareStatement(sql);
        st.setString(1,java.time.LocalDate.now().toString());
        st.setString(2,"Yes");
        st.setString(3,"");
        rs=st.executeQuery();
        DefaultTableModel model=(DefaultTableModel)jTestTable.getModel();
        model.setRowCount(0);
        while(rs.next()){
            Object o[]={rs.getString("p.full_name"),rs.getString("p.phone"),rs.getString("d.name"),rs.getString("t.test")};
            model.addRow(o);
        }
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
                }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAdd = new javax.swing.JLabel();
        jFile = new javax.swing.JTextField();
        jSubmit = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTestTable = new javax.swing.JTable();
        jBack = new javax.swing.JLabel();
        jView = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jName = new javax.swing.JTextField();
        jSelect = new javax.swing.JLabel();
        jHome = new javax.swing.JLabel();
        jLogout = new javax.swing.JLabel();
        jClose = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/addReport.png"))); // NOI18N
        jAdd.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jAddMouseMoved(evt);
            }
        });
        jAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAddMouseClicked(evt);
            }
        });
        getContentPane().add(jAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, -1, -1));

        jFile.setEditable(false);
        getContentPane().add(jFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 200, 30));

        jSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/submitblue.png"))); // NOI18N
        jSubmit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jSubmitMouseMoved(evt);
            }
        });
        jSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSubmitMouseClicked(evt);
            }
        });
        getContentPane().add(jSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 590, -1, -1));

        jTestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Full Name", "Patient Phone Number", "Doctor Name", "Test"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTestTable.setToolTipText("");
        jScrollPane2.setViewportView(jTestTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 610, 160));

        jBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back_1.png"))); // NOI18N
        jBack.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jBackMouseMoved(evt);
            }
        });
        jBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBackMouseClicked(evt);
            }
        });
        getContentPane().add(jBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 590, -1, -1));

        jView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/viewReport.png"))); // NOI18N
        jView.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jViewMouseMoved(evt);
            }
        });
        jView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jViewMouseClicked(evt);
            }
        });
        getContentPane().add(jView, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 500, -1, -1));

        jLabel3.setFont(new java.awt.Font("Raleway SemiBold", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Patient Full Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        jName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNameKeyTyped(evt);
            }
        });
        getContentPane().add(jName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 200, 30));
        jName.getAccessibleContext().setAccessibleDescription("");

        jSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/select test.png"))); // NOI18N
        jSelect.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jSelectMouseMoved(evt);
            }
        });
        jSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSelectMouseClicked(evt);
            }
        });
        getContentPane().add(jSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 270, -1, -1));

        jHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        jHome.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jHomeMouseMoved(evt);
            }
        });
        jHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jHomeMouseClicked(evt);
            }
        });
        getContentPane().add(jHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 60, -1, -1));

        jLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout_icon.png"))); // NOI18N
        jLogout.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLogoutMouseMoved(evt);
            }
        });
        jLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLogoutMouseClicked(evt);
            }
        });
        getContentPane().add(jLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 60, -1, -1));

        jClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        jClose.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jCloseMouseMoved(evt);
            }
        });
        jClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCloseMouseClicked(evt);
            }
        });
        getContentPane().add(jClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 55, -1, -1));

        jLabel18.setFont(new java.awt.Font("Raleway Medium", 0, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Today Appointment");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 360, 50));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/appointmenticon.png"))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 20, 150, 140));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bar.png"))); // NOI18N
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAddMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jAdd.setCursor(cur1);
    }//GEN-LAST:event_jAddMouseMoved

    private void jAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddMouseClicked
        // TODO add your handling code here:
        jFile.setVisible(true);
        JFileChooser chooser=new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("PDF Documents", "pdf"));
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
        if(f==null){
            filename="";
        }
        else{
        filename=f.getAbsolutePath();
        jFile.setText(filename);
        try{
            File doc=new File(filename);
            FileInputStream fis=new FileInputStream(doc);
            ByteArrayOutputStream bos=new ByteArrayOutputStream();
            byte[] buf=new byte[1024];
            for(int readNum;(readNum=fis.read(buf))!=-1;){
                bos.write(buf, 0, readNum);
            }
            person_doc=bos.toByteArray();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        }
    }//GEN-LAST:event_jAddMouseClicked

    private void jSubmitMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSubmitMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jSubmit.setCursor(cur1);
    }//GEN-LAST:event_jSubmitMouseMoved

    private void jSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSubmitMouseClicked
        // TODO add your handling code here:
        if(person_doc!=null){
        Connection con=null;
        PreparedStatement st=null;
        con=Link.getConnection();
        String sql="update patient_test set report=? where patient_doctor_id='"+patient_doctor_id+"' and id='"+test_id+"' and appointed_date='"+java.time.LocalDate.now().toString()+"'";
        try{
        st=con.prepareStatement(sql);
        st.setBytes(1,person_doc);
        st.executeUpdate();
        JOptionPane.showMessageDialog(null,"Update Successfully");
        jFile.setText("");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        String sql2=("insert into test_technician(staff_id,test_id) values(?,?)");
        try{
            st=con.prepareStatement(sql2);
            st.setString(1,id);
            st.setString(2,test_id);
            st.execute();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        
        DefaultTableModel model=(DefaultTableModel)jTestTable.getModel();
        model.removeRow(row);
        
        jAdd.setVisible(false);
        jFile.setVisible(false);
        jView.setVisible(false);
        jSubmit.setVisible(false);
        
        }
        else{
            JOptionPane.showMessageDialog(null,"Please enter test report file", 
                               "WARNING", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jSubmitMouseClicked

    private void jBackMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBackMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jBack.setCursor(cur1);
    }//GEN-LAST:event_jBackMouseMoved

    private void jBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBackMouseClicked
        // TODO add your handling code here:
        LaboratyTechnicianPanel panel = new LaboratyTechnicianPanel(id);
        panel.setVisible(true);
        dispose();
    }//GEN-LAST:event_jBackMouseClicked

    private void jViewMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jViewMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jView.setCursor(cur1);
    }//GEN-LAST:event_jViewMouseMoved

    private void jViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jViewMouseClicked
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
    try {
        File myFile = new File(filename);
        Desktop.getDesktop().open(myFile);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,"Any file not added", 
                               "WARNING", JOptionPane.WARNING_MESSAGE);
    }
        }
    }//GEN-LAST:event_jViewMouseClicked

    private void jNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNameKeyTyped
        // TODO add your handling code here:
        Connection con = null;
        PreparedStatement st=null;
        ResultSet rs = null;
        con = Link.getConnection();
        String start=jName.getText();
        String sql="select * from patient_test t, patient_doctor pd, patient p, doctor d where t.appointed_date=? and t.done=? and t.report=? and p.full_name like '"+start+"%' and t.patient_doctor_id=pd.id and pd.patient_id=p.id and pd.doctor_id=d.id";
        try{
        st=con.prepareStatement(sql);
        st.setString(1,java.time.LocalDate.now().toString());
        st.setString(2,"Yes");
        st.setString(3,"");
        rs=st.executeQuery();
        DefaultTableModel model=(DefaultTableModel)jTestTable.getModel();
        model.setRowCount(0);
        while(rs.next()){
            Object o[]={rs.getString("p.full_name"),rs.getString("p.phone"),rs.getString("d.name"),rs.getString("t.test")};
            model.addRow(o);
        }
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jNameKeyTyped

    private void jSelectMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSelectMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jSelect.setCursor(cur1);
    }//GEN-LAST:event_jSelectMouseMoved

    private void jSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSelectMouseClicked
        // TODO add your handling code here:
        int column = 0;
        int column2 = 3;
        row = jTestTable.getSelectedRow();
        if(row!=-1){
        full = jTestTable.getModel().getValueAt(row, column).toString();
        test = jTestTable.getModel().getValueAt(row, column2).toString();
        Connection con = null;
        PreparedStatement st=null;
        ResultSet rs = null;
        con = Link.getConnection();
        String sql="select * from patient where full_name=?";
        try{
            st=con.prepareStatement(sql);
            st.setString(1,full);
            rs=st.executeQuery();
            if(rs.next()){
               patient=rs.getString("id");
           
                jAdd.setVisible(true);
                jView.setVisible(true);
                jSubmit.setVisible(true);
            } 
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
        }
        
        Connection con2 = null;
        PreparedStatement st2=null;
        ResultSet rs2 = null;
        con2 = Link.getConnection();
        String sql2="select * from patient_test t, patient_doctor pd, patient p, doctor d where p.id=? and t.appointed_date=? and t.report=? and t.patient_doctor_id=pd.id and pd.patient_id=p.id and pd.doctor_id=d.id";
        try{
            st2=con2.prepareStatement(sql2);
            st2.setString(1,patient);
            st2.setString(2,java.time.LocalDate.now().toString());
            st2.setString(3,"");
            rs2=st2.executeQuery();
            while(rs2.next()){
                patient_doctor_id=rs2.getString("pd.id");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        Connection con1 = null;
        PreparedStatement st1=null;
        ResultSet rs1 = null;
        con1 = Link.getConnection();
        String sql1="select * from patient_test where patient_doctor_id=? and test=?";
        try{
            st1=con1.prepareStatement(sql1);
            st1.setString(1,patient_doctor_id);
            st1.setString(2,test);
            rs1=st1.executeQuery();
            if(rs1.next()){
                test_id=rs1.getString("id");
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        else{
        JOptionPane.showMessageDialog(null, "Select wanted patient and test line", 
                               "WARNING", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jSelectMouseClicked

    private void jHomeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jHomeMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jHome.setCursor(cur1);
    }//GEN-LAST:event_jHomeMouseMoved

    private void jHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jHomeMouseClicked
        // TODO add your handling code here:
        LaboratyTechnicianPanel panel = new LaboratyTechnicianPanel(id);
        panel.setVisible(true);
        dispose();
    }//GEN-LAST:event_jHomeMouseClicked

    private void jLogoutMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLogoutMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jLogout.setCursor(cur1);
    }//GEN-LAST:event_jLogoutMouseMoved

    private void jLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLogoutMouseClicked
        // TODO add your handling code here:
        LoginPanel panel = new LoginPanel();
        panel.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLogoutMouseClicked

    private void jCloseMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCloseMouseMoved
        // TODO add your handling code here:
        Cursor cur1=new Cursor(Cursor.HAND_CURSOR);
        jClose.setCursor(cur1);
    }//GEN-LAST:event_jCloseMouseMoved

    private void jCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCloseMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAdd;
    private javax.swing.JLabel jBack;
    private javax.swing.JLabel jClose;
    private javax.swing.JTextField jFile;
    private javax.swing.JLabel jHome;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLogout;
    private javax.swing.JTextField jName;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jSelect;
    private javax.swing.JLabel jSubmit;
    private javax.swing.JTable jTestTable;
    private javax.swing.JLabel jView;
    // End of variables declaration//GEN-END:variables
}
